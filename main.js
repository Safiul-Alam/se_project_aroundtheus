!function(){"use strict";class t{constructor(t,e,s){this._name=t.name,this._link=t.link,this._cardSelector=e,this._handleImageClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_handleLikeButton(){this._likeButton.classList.toggle("card__like_button_active")}_handleDeleteCard(){this._cardElement.remove()}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeButton()})),this._cardElement.querySelector(".card__delete_button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}getView(){this._cardElement=this._getTemplate(),this._likeButton=this._cardElement.querySelector(".card__like_button");const t=this._cardElement.querySelector(".card__image");return t.src=this._link,t.alt=this._name,this._cardElement.querySelector(".card__title").textContent=this._name,this._setEventListeners(),this._cardElement}}var e=class{constructor(t,e){this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=e,this._inputList=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(t){const e=this._formElement.querySelector(`#${t.id}-error`);t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}_hideInputError(t){const e=this._formElement.querySelector(`#${t.id}-error`);t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}_hasInvalidInput(){return this._inputList.some((t=>!t.validity.valid))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}_setEventListeners(){this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState()}))}))}resetValidation(){this._toggleButtonState(),this._inputList.forEach((t=>{this._hideInputError(t)}))}enableValidation(){this._formElement.addEventListener("submit",(t=>{t.preventDefault(),this._toggleButtonState()})),this._setEventListeners(),this._toggleButtonState()}};const s=document.forms["card-add-form"],n=document.forms["profile-edit-form"],i=(document.querySelector(".cards__list"),{formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"});class o{constructor(t){let{popupSelector:e}=t;this._popupElement=document.querySelector(e),this._closeButton=this._popupElement.querySelector(".modal__close"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.toggle("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(t){"Escape"===t.key&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(t=>{t.target===t.currentTarget&&this.close()}))}}class r extends o{constructor(t,e){super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=[...this._popupForm.querySelectorAll(".modal__input")],this._handleFormSubmit=e}_getInputValues(){return this._formValues={},this._inputList.forEach((t=>{this._formValues[t.name]=t.value})),this._formValues}setInputValues(t){this._inputList.forEach((e=>{e.value=t[e.name]}))}setEventListeners(){this._popupForm.addEventListener("submit",(t=>{t.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._popupForm.reset()})),super.setEventListeners()}}function a(e){return new t(e,"#card-template",u).getView()}const l=new class{constructor(t){let{renderer:e,selector:s}=t;this._renderer=e,this._element=document.querySelector(s)}renderItems(t){t.forEach((t=>this._renderer(t)))}addItem(t){this._element.prepend(t)}}({renderer:t=>{const e=a(t);l.addItem(e)},selector:".cards__list"});l.renderItems([{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}]);const c=new class extends o{constructor(t){super({popupSelector:t}),this._imageEl=this._popupElement.querySelector(".modal__image"),this._titleEl=this._popupElement.querySelector(".modal__caption")}open(t){this._imageEl.src=t.link,this._imageEl.alt=t.name,this._titleEl.textContent=t.name,super.open()}}("#image-preview-modal");function u(t){c.open(t)}c.setEventListeners();const _=new e(i,s);_.enableValidation();const d=new r("#card-add-modal",(function(t){let{title:e,url:s}=t;const n=a({name:e,link:s});l.addItem(n),d.close(),_.disableButton()}));d.setEventListeners(),document.querySelector(".profile__add-button").addEventListener("click",(()=>{d.open()}));const m=new e(i,n);m.enableValidation();const h=new r("#profile-edit-modal",(function(t){p.setUserInfo(t),h.close()}));h.setEventListeners(),document.querySelector(".profile__edit-button").addEventListener("click",(()=>{const t=p.getUserInfo();h.setInputValues(t),m.resetValidation(),h.open()}));const p=new class{constructor(t){let{userName:e,userJob:s}=t;this.userName=document.querySelector(e),this.userJob=document.querySelector(s)}getUserInfo(){return this._userInfo={modalTitle:this.userName.textContent,description:this.userJob.textContent},this._userInfo}setUserInfo(t){let{modalTitle:e,description:s}=t;this.userName.textContent=e,this.userJob.textContent=s}}({userName:".profile__title",userJob:".profile__description"})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,